# Severe Mental Illness and Social issues in London

```{r warning=FALSE, message=FALSE}
library(sf)
library(tidyverse)
library(tmap)
library(janitor)
library(here)
library(broom)
library(car)
library(cowplot)
library(corrr)
library(sp)
library(spdep)
library(spgwr)
library(spatialreg)
library(readxl)
```

## Project Scope

**Research question**

-   Is there any relationship between CMD(Common Mental Disorders) and social issues such as population density, deprivation, and household composition in London?

**References**
From Dr. Jay's presentation
- Likelihood of CMDs is higher in people living alone, with poor physical health and not in work (APMS 2014).
- Strong association with area deprivation

**Hypothesis**

-   Higher population density and deprivation rate lead to a higher number of SMI patient in London
-   Single household lead the higher number of CMD patient

**Data**

- 

**Analysis**

-   Map SAMHI index across London LSOA
-   Load population density, deprivation, and ethnicity data

- Mental health index echibit Spatial autocorrelation
-   Conduct multiple linear regression with SMI index as the dependent variable and selected social issues as independent variables
-   Experiment with the spatial lag and spatial error models, comparing their results
-   Run geographically weighted regression (GWR) to see if there is local variation that is not captured by the global model

**Assumptions**


## Data

[Statistical GIS Boundary Files for London](https://data.london.gov.uk/dataset/statistical-gis-boundary-files-london)

-   This data contains various GIS boundary files for London at different spatial aggregation units, including Lower Super Output Area (LSOA), Middle Super Output Area (MSOA), Wards and Boroughs.
-   For this analysis, we will use LSOA data so that the spatial units correspond with the data available on SMI index
-   Transform the data to a projected coordinate reference system, the British National Grid.

[SMI index data at LSOA level 2011](https://pldr.org/dataset/2noyv/small-area-mental-health-index-samhi)

-   The SAMHI is a composite annual measure of population mental health for each Lower Super Output Area (LSOA) in England. The SAMHI combines data on mental health from multiple sources (NHS-Mental health related hospital attendances, Prescribing data -- Antidepressants, QOF - depression, and DWP - Incapacity benefit and Employment support allowance for mental illness) into a single index.
-   The SAMHI index contains 2011-2019 data based on LSOA level in all England
- We use SAMHI_dec 

[Population Density Data 2011 Census](_)

-   This data based on the 2011 Census and we choose LSOA
-   We will choose these columns:
    -   geography_code
    -   area_population_density_density_number_of_persons_per_hectare_measures_value

### LSOA boundary data

```{r LSOA boundary}
lsoa <- st_read(here::here("data", "statistical-gis-boundaries-london","ESRI", "LSOA_2011_London_gen_MHW.shp")) %>%
  st_transform(., 27700)

summary(lsoa)

qtm(lsoa)
```

There are 4835 LSOA in London in 2011.

### SMI index data

```{r SAMHI index}
samhi_index <- read_csv(here::here("data","samhi_21_01_v4.00_2011_2019_LSOA_tall.csv"),locale=locale(encoding = "latin1")) %>%
  clean_names()
```

```{r}
# filter 2019 and SAMHI index column
samhi_2011 <- samhi_index %>%
  select(lsoa11,year,samhi_dec)%>%
  filter(str_detect(year, "2011"))

summary(samhi_2011)
```

```{r}
# join SAMHI index to LSOA boundary
samhi <- lsoa %>%
  left_join(.,
            samhi_2011, 
            by = c("LSOA11CD" = "lsoa11"))

Datatypelist <- samhi %>% 
  st_drop_geometry() %>%
  summarise_all(class) %>%
  pivot_longer(everything(), 
               names_to="All_variables", 
               values_to="Variable_class")

# plot SAMHI index (deciles)
#qtm(samhi, 
#    fill = "samhi_dec",
#    fill.palette = "Blues")
```

### Population Density Data

```{r pop_density}
pd <- read_csv(here::here("data","population_density.csv"),locale=locale(encoding = "latin1"))%>%
  clean_names()
```

```{r}
# filter 2011 and population density column
pd_2011 <- pd %>%
  select(geography_code, area_population_density_density_number_of_persons_per_hectare_measures_value)

summary(pd_2011)
```

### Socio-economic

```{r deprivation}
depriv <- read_excel(here::here("data","lsoa-data.xls"))%>%
  clean_names()

head(depriv)
```

```{r}
# filter 2011 and population density column
depriv_2011 <- depriv %>%
  select(.,codes, unemployment_rate,median_annual_household_income_estimate)%>%
  rename(annual_income=median_annual_household_income_estimate)

summary(depriv_2011)
```

### Household
```{r}
hc <- read_csv(here::here("data","household.csv"),locale=locale(encoding = "latin1")) %>%
  clean_names()
```

```{r}
hc <- read_csv(here::here("data","household.csv"),locale=locale(encoding = "latin1")) %>%
  clean_names()
```

```{r}
hc_2011 <- hc%>%
  mutate(single_hc=household_composition_one_person_household_measures_value/household_composition_all_categories_household_composition_measures_value)%>%
  select(geography_code, single_hc)
```

```{r}
sum(is.na(hc$household_composition_one_person_household_measures_value))
```
```{r}
sum(is.na(hc$household_composition_all_categories_household_composition_measures_value))
```
### Predictors

```{r}
# join population density, IMD, and ethnicity to LSOA boundary
predictors <- lsoa %>%
  left_join(.,
            samhi_2011, 
            by = c("LSOA11CD"="lsoa11"))%>%
  left_join(.,
            pd_2011, 
            by = c("LSOA11CD"="geography_code"))%>%
  left_join(.,
            depriv_2011, 
            by = c("LSOA11CD"="codes"))%>%
  left_join(.,
            hc_2011, 
            by = c("LSOA11CD"="geography_code"))
```

```{r}
# join population density, IMD, and ethnicity to LSOA boundary
predictors <- samhi_2011 %>%
  left_join(.,
            pd_2011, 
            by = c("lsoa11"="geography_code"))%>%
  left_join(.,
            depriv_2011, 
            by = c("lsoa11"="codes"))%>%
  left_join(.,
            hc_2011, 
            by = c("lsoa11"="geography_code"))
```

```{r}
#write.csv(df, file='./data.csv')
```

```{r}
# join population density, IMD, and ethnicity to LSOA boundary
join <- lsoa %>%
  left_join(.,
            samhi_2011, 
            by = c("LSOA11CD"="lsoa11"))%>%
  left_join(.,
            pd_2011, 
            by = c("LSOA11CD"="geography_code"))%>%
  left_join(.,
            depriv_2011, 
            by = c("LSOA11CD"="codes"))%>%
  left_join(.,
            hc_2011, 
            by = c("LSOA11CD"="geography_code"))
```

```{r}
df <- join%>%
  select(.,LSOA11CD, samhi_dec, area_population_density_density_number_of_persons_per_hectare_measures_value, unemployment_rate, annual_income, single_hc)%>%
  rename(pop_dens=area_population_density_density_number_of_persons_per_hectare_measures_value)%>%
  clean_names()
```

```{r}
Datatypelist <- df %>% 
  st_drop_geometry() %>%
  summarise_all(class) %>%
  pivot_longer(everything(), 
               names_to="All_variables", 
               values_to="Variable_class")
```

```{r}
h1 <- ggplot(df, aes(x=pop_dens)) +
  geom_histogram(color = "darkblue",
                 fill = "lightblue") +
  theme_bw()

h2 <- ggplot(df, aes(x=unemployment_rate)) +
  geom_histogram(color = "darkblue",
                 fill = "lightblue") +
  theme_bw()

h3 <- ggplot(df, aes(x=single_hc)) +
  geom_histogram(color = "darkblue",
                 fill = "lightblue") +
  theme_bw()

h4 <- ggplot(df, aes(x=annual_income)) +
  geom_histogram(color = "darkblue",
                 fill = "lightblue") +
  theme_bw()

plot_grid(h1,h2,h3,h4)
```

Most of the variables appear normally distributed, except for population density.

## Multiple Linear Regression

### Check for the Multicollinearity

```{r multicollinearity all}
# check their correlations are OK
# pearson correlation is only appropriate for interval or ratio data
# we are only concerned about multicollinearity between predictor variables
myvars <- df %>%
  dplyr::select(pop_dens,unemployment_rate,single_hc,annual_income) %>%
  st_drop_geometry()

# get correlation matrix
cormat <- cor(myvars, use="complete.obs", method="pearson")

# significance test
sig1 <- corrplot::cor.mtest(myvars, conf.level = .95)

# create a correlogram
corrplot::corrplot(cormat, type = "lower",
                   method = "circle", 
                   order = "hclust", 
                   tl.cex = 0.7,
                   p.mat = sig1$p, sig.level = .05, 
                   col = viridis::viridis(100, option = "magma"),
                   diag = FALSE)
```

The size of the circle reflects the strength of the relationships as captured by the Pearson correlation coefficient. Crosses indicate statistically insignificant relationships at the 95% level of confidence. 

It looks like pop_dens is highly correlated with imd_score and less correlated with samhi_dec, so we will remove pop_dens as a predictor variable.

```{r multicollinearity selected}
myvars2 <- myvars %>%
  select(unemployment_rate,pop_dens,single_hc)

cormat <- cor(myvars2, use="complete.obs", method="pearson")

# significance test
sig1 <- corrplot::cor.mtest(myvars2, conf.level = .95)

# create a correlogram
corrplot::corrplot(cormat, type="lower",
                   method = "circle", 
                   order = "original", 
                   tl.cex = 0.7,
                   p.mat = sig1$p, sig.level = .05, 
                   col = viridis::viridis(100, option = "plasma"),
                   diag = FALSE)
```

The remaining variables no longer exhibit strong multicollinearity, so I will refine my hypothesis as follows: 

* **Hypothesis:** Higher unemployment rate, population density and single person household lead to higher mental health illness

### Check for linear relationship between x and y

```{r linear relationship}
regression_data <- df %>%
  dplyr::select(lsoa11cd,
                samhi_dec,
                unemployment_rate,
                pop_dens,
                single_hc)

p1 <- ggplot(regression_data, aes(x=pop_dens, y=samhi_dec)) + 
  geom_point() +
  geom_smooth(method=lm) +
  theme_classic()

p2 <- ggplot(regression_data, aes(x=single_hc, y=samhi_dec)) + 
  geom_point() +
  geom_smooth(method=lm) +
  theme_classic()

p3 <- ggplot(regression_data, aes(x=unemployment_rate, y=samhi_dec)) + 
  geom_point() +
  geom_smooth(method=lm) +
  theme_classic()

plot_grid(p1, p2,p3)
```

There seems to be a slight positive relationship between all our predictor variables and the percentage of obesity in the population.

### Linear model
Now I will fit a linear model using the ordinary least squares method. 

```{r lm}
eq <- samhi_dec ~
  single_hc + pop_dens + unemployment_rate

ols_model <- lm(eq,
                data = regression_data)

# show the summary of those outputs
tidy(ols_model)
glance(ols_model)
summary(ols_model)
```

Result:
Adjusted R-squared = 32.6%

p-values:
unemployment= 6.599478e-194
single_hc= 2.590688e-230
pop_dens= 3.761510e-08 

The results indicate that 32.6% of the variation in the mental health index can be explained by the single person household, unemployment rate and population density. The individual p-values for all predictor variables are significant at the 99.9% level of significance.

The higher rate of single person household and unempolyment rate lead to higher SAMHI index (CMD cases) and the lower population density leads to higher SAMHI index.

### Check for normally distributed residuals

```{r normally distributed res}
shape_joined <- df %>%
  mutate(ols_model_res = residuals(ols_model))

ggplot(shape_joined, aes(x=ols_model_res)) +
  geom_histogram(color = "darkblue",
                 fill = "lightblue") +
  theme_bw()
```

The residuals appear to be normally distributed. 

### Check for homoscedasticity
Homoscedasticity refers to equal error variance for all x values. That is, the errors about the regression line do not vary with x. This can be verified using a residuals vs fits plot.

```{r res vs fits}
par(mfrow = c(2, 2))
plot(ols_model)
```

The residuals vs fitted values plot at the top left corner shows that when the fitted values are large, most of the residuals are negative. This may be a violation of the equal variance assumption, but otherwise, the other residuals show equal variance. 

The Normal Q-Q plot in the top right corner can be used to check if the residuals are normally distributed. If they are, they should follow a straight line, which is the case here. 

### Check for independent residuals

```{r map residuals}
tm_shape(shape_joined) +
  tm_polygons("ols_model_res")
```

The map shows that LSOAs with positive residuals seem to be neighbouring other LSOAs with positive residuals, while those with negative residuals also exhibit some clustering. 

To obtain a more quantitative measure of spatial autocorrelation, I will turn to Moran's I. 

#### Moran's I

```{r queen neighbours}
# calculate the centroids of MSOAs
centroids <- shape_joined %>%
  st_centroid() %>%
  st_geometry()

# the poly2nb function builds a neighbours list based on regions with contiguous boundaries, that is sharing one or more boundary point
# queen = TRUE means a single shared boundary point meets the contiguity condition
neighbours_list <- shape_joined %>%
  poly2nb(., queen=T)

summary(neighbours_list)

plot(neighbours_list, st_geometry(centroids), col="red")
plot(shape_joined$geometry, add = T)
```

932 out of 983 MSOAs are not connected to other regions, which could present errors later in our analysis. 

Thus, I will use k nearest neighbours with k set to 4 to generate the neighbours list. 

```{r knn}
# k nearest neighbours returns a matrix with the indices of points belonging to the set of the k nearest neighbours of each other
knn_msoa <- centroids %>%
  knearneigh(., k=4)

# convert the knn object returned by knearneigh into a neighbours list
knn_nb <- knn_msoa %>%
  knn2nb()

plot(knn_nb, st_geometry(centroids), col="blue")
plot(shape_joined$geometry, add = T)

```

Now run Moran's I test using row standardised spatial weights. 

```{r global moran}
# add spatial weights to neighbours list
lsoa_spatial_weights_list <- knn_nb %>%
  nb2listw(., style="W")

# run Moran's I test for spatial autocorrelation
global_moran <- shape_joined %>%
  pull(ols_model_res) %>%
  as.vector() %>%
  moran.test(., lsoa_spatial_weights_list) 

global_moran
```

The global Moran’s I statistic is 4.689294e-01 (1 = clustered, 0 = no pattern, -1 = dispersed) which shows that we have some distinctive clustering.

The p-value is less than 2.2e-16, indicating that the results are statistically significant at the 99.9% level of significance. We can reject the null hypothesis that the model residuals are randomly distributed among LSOAs.

The standard deviation (or Z-score) is positive (48.343), indicating that the spatial distribution of high values and/or low values of residuals is more spatially clustered than would be expected if underlying spatial processes were random.

## Geographically Weighted Regression
Perhaps the spatial autocorrelation that we have observed for obesity percentages in London MSOAs is indicative of some local variation that the global OLS model has failed to capture. 

GWR explores how the relationship between a dependent variable (Y) and one or more independent variables (the Xs) might vary geographically.

```{r gwr bandwidth}
centroids2 <- st_coordinates(centroids)

shape_joined2 <- cbind(shape_joined, centroids2)

# find optimal kernel bandwidth
GWR_bandwidth <- gwr.sel(eq,
                         data = shape_joined2,
                         coords = cbind(shape_joined2$X,
                                        shape_joined2$Y),
                        # provide an adaptive bandwidth as opposed to a fixed bandwidth
                        adapt = TRUE)

GWR_bandwidth

```
The optimal bandwidth is about 0.0021 meaning 0.21% of all the total spatial units should be used for the local regression based on k-nearest neighbours. This is about 10 of the 4835 LSOAs.


```{r fit gwr model}
# fit the gwr model based on adaptive bandwidth
gwr_abw <- gwr(eq,
               data = shape_joined2, 
               coords = cbind(shape_joined2$X, shape_joined2$Y), 
               adapt = GWR_bandwidth, 
               # matrix output
               hatmatrix = TRUE, 
               # standard error
               se.fit = TRUE)

# print the results of the model
gwr_abw

results <- as.data.frame(gwr_abw$SDF)
# names(results)
```

The coefficients for single house range from a minimum value of -1.2e- (1 gram increase in fat resulting in a drop in obesity percentage of 10.6) to +8.16 (1 gram increase in fat resulting in a increase in obesity percentage of 8.16). 

For half of the LSOAs in the dataset, as the weight of the average food product increases by 1 gram, the obesity percentage will increase between 0.012 and 0.067 points (the inter-quartile range between the 1st Qu and the 3rd Qu).

```{r save results}
# save localR2 and coefficients to original data frame
shape_joined2$abw_localR2 <- results$localR2

shape_joined2$coef_single_hc <- results$single_hc

shape_joined2$coef_unemployment_rate <- results$unemployment_rate

shape_joined2$coef_pop_dens <- results$pop_dens
```

### Map local R2

```{r map local r2}
# map local R2
legend_title = expression("Adaptive bandwidth: Local R2")

map_abgwr1 = tm_shape(shape_joined2) +
  tm_fill(col = "abw_localR2", title = legend_title, 
          palette = "RdBu", style = "quantile", midpoint = NA) +
  tm_borders(col = "white", lwd = .1) + 
  tm_compass(type = "arrow", position = c("right", "top") , size = .8) + 
  tm_scale_bar(breaks = c(0,1,2), text.size = 0.7, position =  c("right", "bottom")) +
  tm_layout(main.title = "Adaptive bandwidth: Local R2", main.title.size=1.5, bg.color = "white", legend.outside = TRUE, legend.hist.width=.5, legend.hist.height=.5, legend.outside.size = .5)

map_abgwr1
tmap_save(map_abgwr1, "map_abgwr1.png", height=7)
```

The local R-squared values range from -0.04 to 0.8, with several LSOAs that having higher R-squared values varies and spread accross London. E.g. :

### Map the coefficients

```{r map coef}
# single_hc
legend_title = expression("Coefficient of Single Person Household")

map_coef_single_hc = tm_shape(shape_joined2) +
  tm_fill(col = "coef_single_hc", title = legend_title, midpoint=NA,
          palette = "RdBu", style = "quantile") + 
  tm_borders(col = "white", lwd = .1)  +
  tm_compass(type = "arrow", position = c("right", "top") , size = .8) +
  tm_scale_bar(breaks = c(0,1,2), text.size = 0.7, position =  c("left", "bottom")) + 
  tm_layout(main.title = "Coefficient of Single person Household", main.title.size=1.5, bg.color = "white", legend.outside = TRUE, legend.hist.width=.5, legend.hist.height=.5, legend.outside.size = .5)

map_coef_single_hc
tmap_save(map_coef_single_hc, "map_coef_single_hc.png")

# unemployment rate
legend_title = expression("Coefficient of Unemployment Rate")

map_coef_unemployment_rate = tm_shape(shape_joined2) +
  tm_fill(col = "coef_unemployment_rate", title = legend_title, midpoint=NA,
          palette = "RdBu", style = "quantile") + 
  tm_borders(col = "white", lwd = .1)  + 
  tm_compass(type = "arrow", position = c("right", "top") , size = .8) +
  tm_scale_bar(breaks = c(0,1,2), text.size = 0.7, position =  c("left", "bottom")) + 
  tm_layout(main.title = "Coefficient of Unemployment Rate", main.title.size=1.5, bg.color = "white", legend.outside = TRUE, legend.hist.width=.5, legend.hist.height=.5, legend.outside.size = .5) 

map_coef_unemployment_rate
tmap_save(map_coef_unemployment_rate, "map_coef_unemployment_rate.png")

# population density
legend_title = expression("Coefficient of Population Density")

map_coef_pop_dens = tm_shape(shape_joined2) +
  tm_fill(col = "coef_pop_dens", title = legend_title, midpoint=NA, palette = "RdBu", style = "quantile") + 
  tm_borders(col = "white", lwd = .1)  + 
  tm_compass(type = "arrow", position = c("right", "top") , size = .8) +
  tm_scale_bar(breaks = c(0,1,2), text.size = 0.7, position =  c("left", "bottom")) + 
  tm_layout(main.title = "Coefficient of Population Density", main.title.size=1.5, bg.color = "white", legend.outside = TRUE, legend.hist.width=.5, legend.hist.height=.5, legend.outside.size = .5) 

map_coef_pop_dens
tmap_save(map_coef_pop_dens, "map_coef_pop_dens.png")
```

The coefficients for the single person household show that the relationship between this variable and mental health index is positive for most LSOAs, especially in some central areas towards the east side of London. 

Interestingly, on the north west outskirts of London, the relationship between single person household and mental health index is negative (indicated in red on the map), which is unexpected. There could be some other factors at play that are unrelated to mental health, perhaps related to ___.

The coefficients for the population density show that most of LSOAs have negative coefficients, meaning that an increase in population density leads to a decrease in mental health index. We also can see the trend of negative relationship shows stronger in the outer side of London.

The coefficients for the unemployment rate show that there is mostly a positive relationship between this variable and mental health index across LSOAs in south part of London and the opposite result in north part of London.

### Assessing statistical significance
Roughly, if a coefficient estimate has an absolute value of t greater than 1.96 and the sample is sufficiently large, then it is statistically significant.

```{r t statistic single person household}
# compute t statistic
shape_joined2$t_single_hc = results$single_hc / results$single_hc_se

# categorise t values
shape_joined2$t_single_hc_cat <- cut(shape_joined2$t_single_hc,
                     breaks = c(min(shape_joined2$t_single_hc), 
                              -1.96, 1.96, 
                              max(shape_joined2$t_single_hc)),
                     labels = c("sig","nonsig", "sig"))

# map statistically significant coefs
legend_title = expression("Single person household significancy")

map_sig_single_hc = tm_shape(shape_joined2) + 
  tm_fill(col = "t_single_hc_cat", title = legend_title, palette = "RdBu",
          legend.hist = FALSE, midpoint = NA, 
          textNA = "", colorNA = "white") +  
  tm_borders(col = "grey", lwd = .1)  + 
  tm_compass(type = "arrow", position = c("right", "top") , size = 1) + 
  tm_scale_bar(breaks = c(0,1,2), text.size = 1, position =  c("right", "bottom")) + 
  tm_layout(main.title = "Single person household significancy", main.title.size=1.5, bg.color = "white", legend.outside = TRUE, legend.hist.width=.5, legend.hist.height=.5, legend.outside.size = .5)

map_sig_single_hc

tmap_save(map_sig_single_hc, "map_sig_single_hc.png", height=7)
```

For more than half of the LSOAs, the results for the single person household are statistically significant in explaining mental health index. 

```{r t statistic unemployment rate}
# compute t statistic
shape_joined2$t_unemployment_rate = results$unemployment_rate / results$unemployment_rate_se

# categorise t values
shape_joined2$t_unemployment_rate_cat <- cut(shape_joined2$t_unemployment_rate,
                     breaks = c(min(shape_joined2$t_unemployment_rate), 
                              -1.96, 1.96, 
                              max(shape_joined2$t_unemployment_rate)),
                     labels = c("sig","nonsig", "sig"))

# map statistically significant coefs 
legend_title = expression("Unemployment rate significancy")

map_sig_unemployment_rate = tm_shape(shape_joined2) + 
  tm_fill(col = "t_unemployment_rate_cat", title = legend_title, palette = "RdBu",
          legend.hist = FALSE, midpoint = NA, 
          textNA = "", colorNA = "white") +  
  tm_borders(col = "grey", lwd = .1)  + 
  tm_compass(type = "arrow", position = c("left", "bottom") , size = 2) + 
  tm_scale_bar(breaks = c(0,1,2), text.size = 0.7, position =  c("right", "bottom")) + 
  tm_layout(main.title = "Unemployment rate significancy", main.title.size=1.5, bg.color = "white", legend.outside = TRUE, legend.hist.width=.5, legend.hist.height=.5, legend.outside.size = .5)

map_sig_unemployment_rate

tmap_save(map_sig_unemployment_rate, "map_sig_unemployment_rate.png", height=7)
```

This map shows that the unemployment rate is statistically significant for most of the LSOAs, 

```{r t statistic population density}
# compute t statistic
shape_joined2$t_pop_dens = results$pop_dens / results$pop_dens_se

# categorise t values
shape_joined2$t_pop_dens_cat <- cut(shape_joined2$t_pop_dens,
                     breaks = c(min(shape_joined2$t_pop_dens), 
                              -1.96, 1.96, 
                              max(shape_joined2$t_pop_dens)),
                     labels = c("sig","nonsig", "sig"))

# map statistically significant coefs 
legend_title = expression("Population Density significancy")

map_sig_pop_dens = tm_shape(shape_joined2) + 
  tm_fill(col = "t_pop_dens_cat", title = legend_title, palette = "RdBu",
          legend.hist = FALSE, midpoint = NA, 
          textNA = "", colorNA = "white") +  
  tm_borders(col = "grey", lwd = .1)  + 
  tm_compass(type = "arrow", position = c("right", "top") , size = 2) + 
  tm_scale_bar(breaks = c(0,1,2), text.size = 0.7, position =  c("right", "bottom")) + 
  tm_layout(main.title = "Population density significancy", main.title.size=1.5, bg.color = "white", legend.outside = TRUE, legend.hist.width=.5, legend.hist.height=.5, legend.outside.size = .5)

map_sig_pop_dens

tmap_save(map_sig_pop_dens, "map_sig_pop_dens.png", height=7)
```

This map shows that the population density is not statistically significant for most of the LSOAs, so we should take this into account when interpreting the results of this variable in the GWR.

## Reflection
In conclusion, we have looked at three factors and their relationship with mental health index, namely, single person household, unemployment rate and population density 

We have used two different models to model the relationship between these factors and mental health index, namely, the ordinary least squares multiple linear regression model, and the geographically weighted regression model. 

In general, the results show that unemployment rate and single person household are associated with higher obesity percentages, so policymakers can look into ways to reduce these numbers to combat mental health.

```{r}
# plot population density
map_samhi <- tm_shape(df)+
  tm_fill(col="samhi_dec", 
          title = "London Common Mental Health index 2011",
          style = "cont",
          textNA = "No data",
          colorNA = "white", 
          palette = "RdBu")+
  tm_borders(col = "white", lwd = .1) +
  tm_compass(type = "arrow", position = c("right", "top") , size = .5) +
  tm_scale_bar(breaks = c(0,1,2), text.size = 0.7, position =  c("left", "bottom")) +
  tm_layout(bg.color = "white", legend.outside = TRUE)
map_samhi
```

```{r}
# plot population density
map_pd <- tm_shape(df)+
  tm_fill(col="pop_dens", 
          title = "London Population Density 2011",
          breaks = c(0,200,400,450,500,550,600,650,700),
          style = "cont",
          textNA = "No data",
          colorNA = "white", 
          palette = "RdBu")+
  tm_borders(col = "white", lwd = .1) +
  tm_compass(type = "arrow", position = c("right", "top") , size = .5) +
  tm_scale_bar(breaks = c(0,1,2), text.size = 0.7, position =  c("left", "bottom")) +
  tm_layout(bg.color = "white", legend.outside = TRUE)
map_pd
```

```{r}
# plot deprivation index (IMD)
map_imd <- tm_shape(df)+
  tm_fill(col="unemployment_rate", 
          title = "Unemployment rate 2011",
          style = "cont",
          textNA = "No data",
          colorNA = "white", 
          palette = "RdBu")+
  tm_borders(col = "white", lwd = .1) +
  tm_compass(type = "arrow", position = c("right", "top") , size = .5) +
  tm_scale_bar(breaks = c(0,1,2), text.size = 0.7, position =  c("left", "bottom")) +
  tm_layout(bg.color = "white", legend.outside = TRUE)
map_imd
```

```{r}
# plot deprivation index (IMD)
map_imd <- tm_shape(df)+
  tm_fill(col="single_hc", 
          title = "Single Household Percentage 2011",
          style = "cont",
          textNA = "No data",
          colorNA = "white", 
          palette = "RdBu")+
  tm_borders(col = "white", lwd = .1) +
  tm_compass(type = "arrow", position = c("right", "top") , size = .5) +
  tm_scale_bar(breaks = c(0,1,2), text.size = 0.7, position =  c("left", "bottom")) +
  tm_layout(bg.color = "white", legend.outside = TRUE)
map_imd
```

```{r}
write.csv(shape_joined2[,c("lsoa11cd","coef_single_hc","coef_unemployment_rate","coef_pop_dens","t_single_hc_cat","t_unemployment_rate_cat","t_pop_dens_cat")], file='./result.csv')
```